# docker compose --env-file .env.dev up --build
services:
  mongodb:
    image: mongo:7.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    networks:
      - mynetwork



  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    ports:
      - "5432:5432"

  kong-migrations:
    image: kong:3.7.1
    container_name: kong-migrations
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
    command: kong migrations bootstrap
    depends_on:
      - kong-database

  kong-gateway:
    image: kong:3.7.1
    container_name: kong-gateway
    volumes:
      - ./kong.yml:/etc/kong/kong.yml
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_ADMIN_GUI_URL: http://127.0.0.1:8002
    ports:
      - "8000:8000"
      - "8443:8443"
      - "127.0.0.1:8001:8001"
      - "127.0.0.1:8002:8002"
      - "127.0.0.1:8444:8444"
    depends_on:
      - kong-database
      - kong-migrations

  db_employee:
    container_name: db_employee
    image: mysql:8.0
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./db_employee:/var/lib/mysql

    environment:
      - MYSQL_ROOT_PASSWORD=${SQL_ROOT_PASSWORD}
      - MYSQL_USER=${SQL_USER}
      - MYSQL_PASSWORD=${SQL_PASSWORD}
      - MYSQL_DATABASE=${SQL_DATABASE}
    ports:
      - 3306:3306
    networks:
      - mynetwork
    

  db_leave:
    container_name: db_leave
    image: mysql:8.0
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./db_leave:/var/lib/mysql

    environment:
      - MYSQL_ROOT_PASSWORD=${SQL_ROOT_PASSWORD}
      - MYSQL_USER=${SQL_USER}
      - MYSQL_PASSWORD=${SQL_PASSWORD}
      - MYSQL_DATABASE=${SQL_DATABASE}
    ports:
      - 3307:3307
    networks:
      - mynetwork

  service_employee:
    container_name: service_employee
    build:
      context: ./serviceEmployee
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8004
    volumes:
      - ./serviceEmployee/:/usr/src/app/
    env_file:
      - ./.env.dev
    ports:
      - 8004:8004
    depends_on:
      - db_employee
    links:
      - db_employee
    networks:
      - mynetwork

  service_leave:
    container_name: service_leave
    build:
      context: ./serviceLeave
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8005
    volumes:
      - ./serviceLeave/:/usr/src/app/
    env_file:
      - ./.env.dev
    ports:
      - 8005:8005
    depends_on:
      - db_leave
    links:
      - db_leave
    networks:
      - mynetwork

  service_reward:
    container_name: service_reward
    build:
      context: ./serviceReward
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8006
    volumes:
      - ./serviceReward/:/usr/src/app/
    env_file:
      - ./.env.dev
    ports:
      - 8006:8006
    depends_on:
      - db_employee
    links:
      - db_employee
    networks:
      - mynetwork

  # strava:
  #   container_name: strava
  #   build:
  #     context: ./Reward/strava  # Đường dẫn đến thư mục chứa Dockerfile cho Strava service
  #     # dockerfile: Dockerfile
  #   command: python strava_api.py  # Lệnh để chạy Strava service
  #   volumes:
  #     - ./strava/:/usr/src/app/
  #   env_file:
  #     - ./.env.dev  # Sử dụng file .env.dev để quản lý biến môi trường
  #   ports:
  #     - "5000:5000"  # Port mà Strava service sẽ chạy
 


  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8008
    volumes:
      - ./frontend/:/usr/src/app/
    env_file:
      - ./.env.dev
    ports:
      - 8008:8008
    networks:
      - mynetwork
  
  phpmyadmin-employee:
    image: phpmyadmin/phpmyadmin
    container_name: myadmin-employee
    environment:
      PMA_HOST: db_employee
      MYSQL_ROOT_PASSWORD: ${SQL_ROOT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db_employee
    networks:
      - mynetwork

  phpmyadmin-leave:
    image: phpmyadmin/phpmyadmin
    container_name: myadmin-leave
    environment:
      PMA_HOST: db_leave
      MYSQL_ROOT_PASSWORD: ${SQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - db_leave
    networks:
      - mynetwork
networks:
  default:
    external: true
    name: kong-net
  mynetwork:
    driver: bridge

volumes:
  mongodata:
    driver: local
